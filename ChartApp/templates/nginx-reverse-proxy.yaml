apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: {{ .Values.nginxreverse.port }}  # Utilise la variable du fichier values.yaml
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx_config.conf: |
    server {
      listen {{ .Values.nginxreverse.port }};  # Utilise la variable du fichier values.yaml

      location /api/v1/movies {
        proxy_pass http://movie-service:{{ .Values.movieservice.port }}/api/v1/movies;  # Utilise la variable du fichier values.yaml
      }

      location /api/v1/casts {
        proxy_pass http://cast-service:{{ .Values.castservice.port }}/api/v1/casts;  # Utilise la variable du fichier values.yaml
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy-service
spec:
  type: NodePort
  selector:
    app: nginx-reverse-proxy
  ports:
    - protocol: TCP
      port: {{ .Values.nginxreverse.port }}  # Utilise la variable du fichier values.yaml
      targetPort: 8082  # Utilisation d'une valeur fixe ici
      nodePort: {{ .Values.nginxreverse.nodePort }}  # Utilise la variable du fichier values.yaml

